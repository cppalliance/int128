# Copyright 2025 Matt Borland
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

require-b2 5.0.1 ;
import-search /boost/config/checks ;
import config : requires ;
import modules ;
import testing ;

project : requirements

    <warnings>extra

    <toolset>gcc:<cxxflags>-Wsign-conversion
    <toolset>gcc:<cxxflags>-Wconversion
    <toolset>gcc:<cxxflags>-Wundef
    <toolset>gcc:<cxxflags>-Wold-style-cast
    <toolset>gcc:<cxxflags>-Wfloat-equal
    <toolset>gcc:<cxxflags>-Wshadow
    <toolset>gcc:<cxxflags>-Wcast-qual
    <toolset>gcc:<cxxflags>-Wcast-align
    <toolset>gcc:<cxxflags>-Wlogical-op
    <toolset>gcc:<cxxflags>-Wdouble-promotion
    <toolset>gcc:<cxxflags>-Wformat=2
    <toolset>gcc:<cxxflags>-Wstack-protector

    <toolset>clang:<cxxflags>-Wsign-conversion
    <toolset>clang:<cxxflags>-Wconversion
    <toolset>clang:<cxxflags>-Wundef
    <toolset>clang:<cxxflags>-Wold-style-cast
    <toolset>clang:<cxxflags>-Wfloat-equal
    <toolset>clang:<cxxflags>-Wshadow
    <toolset>clang:<cxxflags>-Wcast-qual
    <toolset>clang:<cxxflags>-Wcast-align
    <toolset>clang:<cxxflags>-Wdouble-promotion
    <toolset>clang:<cxxflags>-Wformat=2
    <toolset>clang:<cxxflags>-Wnull-dereference
    <toolset>clang:<cxxflags>-Wthread-safety
    <toolset>clang:<cxxflags>-Wunused-lambda-capture
    <toolset>clang:<cxxflags>-Wassign-enum

    <toolset>msvc:<warnings-as-errors>on
    <toolset>clang:<warnings-as-errors>on
    <toolset>gcc:<warnings-as-errors>on

  [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ]
  ;

run quick.cpp ;

run-fail benchmark_u128.cpp ;
run test_u128.cpp ;
run test_limits_u128.cpp ;

run-fail benchmark_i128.cpp ;
run test_i128.cpp ;
run test_limits_i128.cpp ;

run test_bit.cpp ;
run test_literals.cpp ;
run test_mixed_type_ops.cpp ;

compile-fail test_mixed_arithmetic.cpp ;
